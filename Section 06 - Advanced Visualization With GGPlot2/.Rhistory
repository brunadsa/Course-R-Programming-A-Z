getwd()
setwd("D:\\brunn\\Documents\\Bruna\\03 Formação Acadêmica\\Cursos\\Curso Programação em R\\Section 06 - Advanced Visualization With GGPlot2")
getwd()
movies<- read.csv("Movie-Ratings.csv")
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black")
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.,scales="free")
#scatterplots
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, colour=Genre))
w + geom_point(size=3) + facet_grid(Genre~.)
w + geom_point(size=3) + facet_grid(.~Year)
w + geom_point(size=3) + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() + facet_grid(Genre~Year)
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black")
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black")
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.,scales="free")
v <- ggplot(data=movies, aes(x=BudgetMillions))
library("ggplot2", lib.loc="~/R/win-library/3.4")
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black")
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.,scales="free")
#scatterplots
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, colour=Genre))
w + geom_point(size=3) + facet_grid(Genre~.)
w + geom_point(size=3) + facet_grid(.~Year)
w + geom_point(size=3) + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() + facet_grid(Genre~Year)
colnames(movies) <- c("Film","Genre","CriticRating",
"AudienceRating","BudgetMillions","Year")
v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black")
#facets
v + geom_histogram(binwidth=10, aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.,scales="free")
#scatterplots
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, colour=Genre))
w + geom_point(size=3) + facet_grid(Genre~.)
w + geom_point(size=3) + facet_grid(.~Year)
w + geom_point(size=3) + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) + geom_smooth() + facet_grid(Genre~Year)
o + geom_histogram(binwidth = 10, aes(fill = Genre), colour ="Black")
o <- ggplot(data=movies, aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill = Genre), colour ="Black")
o <- ggplot(data=movies, aes(x=BudgetMillions))
h <- o + geom_histogram(binwidth = 10, aes(fill = Genre), colour ="Black")
#axes label
h + xlab("Money Axis")
#axes label
h + xlab("Money Axis") + ylab("Number of movies")
#label formatting
h + xlab("Money Axis") + ylab("Number of movies") + them(axis.title.x = element_text(colour="DarkGreen", size=30),
axis.title.y = element_text(colour="Red", size=30))
#label formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=30),
axis.title.y = element_text(colour="Red", size=30))
#label formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20))
#tick mark formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10))
?theme
#legend formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10))
#legend formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1))
?theme
#legend formatting
h + xlab("Money Axis") + ylab("Number of movies") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1))
#title
h + xlab("Money Axis") + ylab("Number of movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1))
#title
h + xlab("Money Axis") + ylab("Number of movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue", size =30, family = "Courier"))
#title
h + xlab("Money Axis") + ylab("Number of movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue", size =30,
family = "Courier", position_fill(vjust=1)))
#title
h + xlab("Money Axis") + ylab("Number of movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen", size=20),
axis.title.y = element_text(colour="Red", size=20),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10),
legend.title = element_text(size=20),
legend.text = element_text(size=10),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue", size =30,
family = "Courier"))
getwd()
setwd("D:\\brunn\\Documents\\Bruna\\03 Formação Acadêmica\\Cursos\\Curso Programação em R\\Section 06 - Advanced Visualization With GGPlot2")
getwd()
movies<- read.csv("Section6-Homework-Data.csv")
View(movies)
getwd()
setwd("D:\\brunn\\Documents\\Bruna\\03 Formação Acadêmica\\Cursos\\Curso Programação em R\\Section 06 - Advanced Visualization With GGPlot2")
mov <- read.csv("Section6-Homework-Data.csv")
#Data Exploration
head(mov) #top rows
summary(mov) #column summaries
str(mov) #structure of the dataset
#Activate GGPlot2
#install.packages("ggplot2")
library(ggplot2)
#{Offtopic} This Is A Cool Insight:
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
#Now let's do the same for the Studio filter:
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
#Apply the row filters to the dataframe
mov2 <- mov[filt & filt2,]
#Prepare the plot's data and aes layers
#Note we did not rename the columns.
#Use str() or summary() to fin out the correct column names
str(mov2)
summary(mov2)
#Now let's do the same for the Studio filter:
filt2 <- (mov$Studio %in% c("Buena Vista Studios","WB","Fox","Universal","Sony","Paramount Pictures"))
#Apply the row filters to the dataframe
mov2 <- mov[filt & filt2,]
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
#Add a Point Geom Layer
p +
geom_point()
#Add a boxplot instead of the points
p +
geom_bloxplot()
#Add a boxplot instead of the points
p +
geom_boxplot()
#Replace points with jitter
p +
geom_boxplot() +
geom_jitter()
#Place boxplot on top of jitter
p +
geom_jitter() +
geom|_boxplot()
#Place boxplot on top of jitter
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
#Add boxplot transparency
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
#Good. Now add size and colour to the points:
p +
geom_jitter(aes(size = Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7)
#Good. Now add size and colour to the points:
p +
geom_jitter(aes(size = Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.8)
#Good. Now add size and colour to the points:
p +
geom_jitter(aes(size = Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.5)
#Good. Now add size and colour to the points:
p +
geom_jitter(aes(size = Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.6)
#Let's remove them:
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.6, outlier.colour = NA)
#Let's "Save" our progress by placing it into a new object:
q <- p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.6, outlier.colour = NA)
q
#Non-data ink
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40, family = "Comic Sans MS"),
#Legend title:
legend.title = element_text(size=20),
#Legend text
text = element_text(size=12)
)
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
text = element_text(family = "Comic Sans MS")
)
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
text = element_text(size=12)
)
#Theme
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
q
#Final touch. We haven't discussed this in the course,
#However this is how you can change individual legend titles:
q$labels$size = "Budget $M"
q
